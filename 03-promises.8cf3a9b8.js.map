{"mappings":"AAEEA,QAAQC,IAAI,oBACZ,MAAMC,EAASC,KAAKC,OAiBrB,WAIC,IAAIC,EAAQ,IAERC,EAAO,IACX,MAAMC,EAAaD,EAGnB,IAAIE,EAAW,EAChBC,YAAW,WACR,MAAMC,EAAaC,aAAY,WAC7BH,GAAY,EACK,IAAbA,IACFF,EAAOD,GAELG,GARO,GASTI,cAAcF,GAlCtB,SAAuBF,EAAUH,GACTQ,KAAKC,SAAW,GAGrCd,QAAQC,IAAI,uBAAqBO,QAAiBH,OAGjDL,QAAQC,IAAI,sBAAoBO,QAAeH,OA6B7CU,CAAcP,EAAUH,GACxBA,GAASE,EACT,MAAMS,EAAQb,KAAKC,MACnBJ,QAAQC,IAAI,6BAA8Be,EAAQd,GAAU,OAC3DI,GACEW,EAASd,KAAKC,MACpBJ,QAAQC,IAAI,8BAA+BgB,EAASf,GAAU,OAC7DG,GA3BH","sources":["src/js/03-promises.js"],"sourcesContent":["// const form = document.querySelector('.form');\n// const input = document.querySelector('input[name=\"amount\"]');\n  console.log('start load cache');\n  const before = Date.now();\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n// form.addEventListener('submit', event => {\n  // event.preventDefault();\n  // const stringDelay = event.currentTarget.elements.delay.value;\n  // const stringStep = event.currentTarget.elements.step.value;\n  // const stringAmount = event.currentTarget.elements.amount.value;\n  // let delay = Number(stringDelay);\n(function n() {\n\n  // my loading from mongo\n  \n  let delay = 3000;\n  // const step = Number(stringStep);\n  let step = 1000;\n  const stepLogged = step;\n  // const amount = Number(stringAmount);\n  const amount = 3;\n  let position = 0;\n setTimeout(function time() {\n    const intervalId = setInterval(function () {\n      position += 1;\n      if (position === 1) {\n        step = delay;\n      }\n      if (position >= amount) {\n        clearInterval(intervalId);\n      }\n      createPromise(position, delay);\n      delay += stepLogged;\n      const after = Date.now();\n      console.log('cache load ok executed in', (after - before) / 1000);\n    }, step);\n   const after1 = Date.now();\n   console.log('cache load1 ok executed in', (after1 - before) / 1000);\n }, delay);\n  \n}());\n// });\n\n"],"names":["console","log","$47d4ff9957288465$var$before","Date","now","delay","step","stepLogged","position","setTimeout","intervalId","setInterval","clearInterval","Math","random","$47d4ff9957288465$var$createPromise","after","after1"],"version":3,"file":"03-promises.8cf3a9b8.js.map"}